<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VL.ImGui</name>
    </assembly>
    <members>
        <member name="T:VL.ImGui.Widgets.GetClipboardText">
            <summary>
            Retrieve text data from the clipboard
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.Group">
            <summary>
            Lock horizontal starting position. Capture the whole group bounding box into one "item" (so you can use IsItemHovered or layout primitives such as SameLine on whole group, etc.)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.Indent">
            <summary>
            Move content position toward the right, by Value, or style.IndentSpacing if Value &lt;= 0.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.NewLine">
            <summary>
            Undo a SameLine or force a new line when in an horizontal-layout context.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SameLine">
            <summary>
            Call between widgets or groups to layout them horizontally. X position given in window coordinates.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetCursorPosition">
            <summary>
            Cursor position in window coordinates (relative to window position)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetCursorPosY">
            <summary>
            Cursor position in window coordinates (relative to window position)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetCursorPosX">
            <summary>
            Cursor position in window coordinates (relative to window position)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetCursorScreenPosition">
            <summary>
            Cursor position in window coordinates (relative to window position)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetItemWidth">
            <summary>
            Push width of items for common large "item+label" widgets. &gt;0.0f: width in pixels, &lt;0.0f align xx pixels to the right of window (so -FLT_MIN always align width to the right side).
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetTextWrapPosition">
            <summary>
            Push word-wrapping position for Text commands. &lt; 0.0f: no wrapping; 0.0f: wrap to end of window (or column); > 0.0f: wrap at 'wrap_pos_x' position in window local space
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.Spacing">
            <summary>
            Add vertical spacing.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.Unindent">
            <summary>
            Move content position back to the Left, by Value, or style.IndentSpacing if Value &lt;= 0.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.CloseCurrentPopup">
            <summary>
            Use inside the Popup Region to close it manually.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.OpenPopup">
            <summary>
            Set popup state to open. See Flags for available opening options.
            Don't call every frame!
             If not modal: they can be closed by clicking anywhere outside them, or by pressing ESCAPE.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetScrollFromPosX">
            <summary>
            Adjust scrolling amount to make current cursor position visible.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.SetScrollFromPosX.Ratio">
            <summary>
            0.0 - Left, 0.5 - Center, 1.0 - Right.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetScrollFromPosY">
            <summary>
            Adjust scrolling amount to make current cursor position visible.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.SetScrollFromPosY.Ratio">
            <summary>
            0.0 - Top, 0.5 - Center, 1.0 - Bottom.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetScrollHereX">
            <summary>
            Adjust scrolling amount to make current cursor position visible.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.SetScrollHereX.Ratio">
            <summary>
            0.0 - Left, 0.5 - Center, 1.0 - Right.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetScrollHereY">
            <summary>
            Adjust scrolling amount to make current cursor position visible.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.SetScrollHereY.Ratio">
            <summary>
            0.0 - Top, 0.5 - Center, 1.0 - Bottom.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetScrollX">
            <summary>
            Set scrolling amount
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetScrollY">
            <summary>
            Set scrolling amount
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetClipboardText">
            <summary>
            Capture a text into clipboard.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetColorEditOptions">
            <summary>
            Initialize current options (generally on application startup) if you want to select a default format, picker type, etc.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetItemAllowOverlap">
            <summary>
            Allow last item to be overlapped by a subsequent item. Sometimes useful with invisible buttons, selectables, etc. to catch unused area.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetItemDefaultFocus">
            <summary>
            Make last item the default focused item of a window.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetKeyboardFocusHere">
            <summary>
            Focus keyboard on the next widget. Use positive 'offset' to access sub components of a multiple component widget. Use -1 to access previous widget.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetNextItemOpen">
            <summary>
            Set next TreeNode/CollapsingHeader open state.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetNextItemWidth">
            <summary>
            Set width of the next common large "item+label" widget. &gt;0.0: width in pixels, &lt;0.0 align xx pixels to the right of window.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.SetTabItemClosed">
            <summary>
            Notify TabBar or Docking system of a closed tab/window ahead (useful to reduce visual flicker on reorderable tab bars). 
            For TabBar: call inside TabBar region before Tab submissions. Otherwise call with a window name.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.TableHeader">
            <summary>
            Submit one header cell manually (rarely used)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.TableHeadersRow">
            <summary>
            Submit all headers cells based on data provided to TableSetupColumn() + submit context menu
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.TableNextColumn">
            <summary>
            Append into the next column (or first column of next row if currently in last column). Return true when column is visible.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.TableNextRow">
            <summary>
            Append into the first cell of a new row.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.TableSetBgColor">
            <summary>
            Change the color of a cell, row, or column. See ImGuiTableBgTarget_ flags for details.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.TableSetColumnEnabled">
            <summary>
            Change user accessible enabled/disabled state of a column. Set to false to hide the column. User can use the context menu to change this themselves (right-click in headers, or right-click in columns body with ImGuiTableFlags_ContextMenuInBody)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.TableSetColumnIndex">
            <summary>
            Append into the specified column. Return true when column is visible.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.TableSetupScrollFreeze">
            <summary>
            Lock columns/rows so they stay visible when scrolled.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.Primitives.BezierCubic.SegmentsCount">
            <summary>
            Use 0 to automatically calculate tessellation (preferred).
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.Primitives.BezierQuadratic.SegmentsCount">
            <summary>
            Use 0 to automatically calculate tessellation (preferred).
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.Primitives.Quad.IsFilled">
            <summary>
            Filled shapes must always use clockwise winding order. The anti-aliasing fringe depends on it. Counter-clockwise shapes will have "inward" anti-aliasing.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.Primitives.Rect.IsFilled">
            <summary>
            Filled shapes must always use clockwise winding order. The anti-aliasing fringe depends on it. Counter-clockwise shapes will have "inward" anti-aliasing.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.Primitives.Triangle.IsFilled">
            <summary>
            Filled shapes must always use clockwise winding order. The anti-aliasing fringe depends on it. Counter-clockwise shapes will have "inward" anti-aliasing.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.Bullet">
            <summary>
            Draw a small circle + keep the cursor on the same line. Advance cursor x position by GetTreeNodeToLabelSpacing(), same distance that TreeNode() uses
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.ArrowButton">
            <summary>
            Square button with an arrow shape
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.ButtonSmall">
            <summary>
            Button with FramePadding=(0,0) to easily embed within text
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.InvisibleButton">
            <summary>
            Flexible button behavior without the visuals, frequently useful to build custom behaviors using the public api (along with IsItemActive, IsItemHovered, etc.)
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.DragWidget`2.Format">
            <summary>
            Adjust format string to decorate the value with a prefix, a suffix, or adapt the editing and display precision e.g. "%.3f" -> 1.234; "%5.2f secs" -> 01.23 secs; "Biscuit: % .0f" -> Biscuit: 1; etc.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.InputFloat.Format">
            <summary>
            Adjust format string to decorate the value with a prefix, a suffix, or adapt the editing and display precision e.g. "%.3f" -> 1.234; "%5.2f secs" -> 01.23 secs; "Biscuit: % .0f" -> Biscuit: 1; etc.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.InputFloat64.Format">
            <summary>
            Adjust format string to decorate the value with a prefix, a suffix, or adapt the editing and display precision e.g. "%.3f" -> 1.234; "%5.2f secs" -> 01.23 secs; "Biscuit: % .0f" -> Biscuit: 1; etc.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.InputVector2.Format">
            <summary>
            Adjust format string to decorate the value with a prefix, a suffix, or adapt the editing and display precision e.g. "%.3f" -> 1.234; "%5.2f secs" -> 01.23 secs; "Biscuit: % .0f" -> Biscuit: 1; etc.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.InputVector3.Format">
            <summary>
            Adjust format string to decorate the value with a prefix, a suffix, or adapt the editing and display precision e.g. "%.3f" -> 1.234; "%5.2f secs" -> 01.23 secs; "Biscuit: % .0f" -> Biscuit: 1; etc.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.InputVector4.Format">
            <summary>
            Adjust format string to decorate the value with a prefix, a suffix, or adapt the editing and display precision e.g. "%.3f" -> 1.234; "%5.2f secs" -> 01.23 secs; "Biscuit: % .0f" -> Biscuit: 1; etc.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.MainMenuBar">
            <summary>
            Create a MenuBar at the top of the screen.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.Menu">
            <summary>
            Create a Menu. You can call Menu multiple time with the same Label to append more items to it.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.MenuBar">
            <summary>
            Create a MenuBar of current window.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.MenuItem">
            <summary>
            Create a MenuItem. Keyboardshortcuts are displayed as a convenience but not processed by Dear ImGui at the moment.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.Modal">
            <summary>
            Modal Popups block normal mouse hovering detection (and therefore most mouse interactions) behind them. They can't be closed by clicking outside of them.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.Modal.Closing">
            <summary>
            If set the Popup will have a close button which will push to the channel once clicked.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.Modal.Bounds">
            <summary>
            Bounds of the Window.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.Modal.Visible">
            <summary>
            Returns true if the Modal Window is open. Set to true to open the Modal Window.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.Modal.ContentIsVisible">
            <summary>
            Returns true if content is visible.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.Modal.CloseClicked">
            <summary>
            Returns true if close button is clicked. 
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.Popup.Position">
            <summary>
            Position of the Popup.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.Popup.Visible">
            <summary>
            Returns true if the Popup is open. Set to true to open the Popup.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.Popup.ContentIsVisible">
            <summary>
            Returns true if content is visible. 
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.CalcItemWidth">
            <summary>
            Width of item given pushed settings and current cursor position. NOT necessarily the width of last item unlike most 'Item' functions.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetContentRegionAvail">
            <summary>
            Retrieve available space from a given point. == GetContentRegionMax() - GetCursorPos()
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetContentRegionMax">
            <summary>
            Current content boundaries (typically window boundaries including scrolling, or current column boundaries), in windows coordinates
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetCursorPos">
            <summary>
            Cursor position in window coordinates (relative to window position)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetCursorStartPos">
            <summary>
            Initial cursor position in window coordinates
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetCursorScreenPos">
            <summary>
            Cursor position in absolute coordinates (useful to work with ImDrawList API). generally top-left == GetMainViewport()->Pos == (0,0) in single viewport mode, and bottom-right == GetMainViewport()->Pos+Size == io.DisplaySize in single-viewport mode.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetDrawListOffset">
            <summary>
            Cursor position in window coordinates (relative to window position)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetFontSize">
            <summary>
            Get current font size (= height in pixels) of current font with current scale applied
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetFontTexUvWhitePixel">
            <summary>
            Get UV coordinate for a while pixel, useful to draw custom shapes via the ImDrawList API
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetFrameHeight">
            <summary>
            Approx. FontSize + style.FramePadding.y * 2
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetFrameHeightWithSpacing">
            <summary>
            Distance in pixels between 2 consecutive lines of framed widgets. Approx. FontSize + style.FramePadding.y * 2 + style.ItemSpacing.y
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetID">
            <summary>
            Calculate unique ID (hash of whole ID stack + given parameter). e.g. if you want to query into ImGuiStorage yourself
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetItemRectMax">
            <summary>
            Get lower-right bounding rectangle of the last item (screen space)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetItemRectMin">
            <summary>
            Get upper-left bounding rectangle of the last item (screen space)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetItemRectSize">
            <summary>
            Get upper-left bounding rectangle of the last item (screen space)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetMainViewport">
            <summary>
            Return primary/default viewport.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetScroll">
            <summary>
            Get scrolling amount [0 .. GetScrollMax]
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetScrollMax">
            <summary>
            Get maximum scrolling amount ~~ ContentSize - WindowSize - DecorationsSize
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetStyle">
            <summary>
            Access the Style structure (colors, sizes).
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.StyleSnapshot">
            <summary>
            Immutable copy of all ImGui styles
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetStyleColorName">
            <summary>
            Get a string corresponding to the enum value (for display, saving, etc.).
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetStyleColor">
            <summary>
            Retrieve style color as stored in ImGuiStyle structure.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetTextLineHeight">
            <summary>
            Approx. = FontSize
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetTextLineHeightWithSpacing">
            <summary>
            Distance in pixels between 2 consecutive lines of text. Approx. FontSize + style.ItemSpacing.y
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetTreeNodeToLabelSpacing">
            <summary>
            Horizontal distance preceding label when using TreeNode or Bullet == (g.FontSize + style.FramePadding.x*2) for a regular unframed TreeNode
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsAnyItemActive">
            <summary>
            Is any item active?
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsAnyItemFocused">
            <summary>
            Is any item focused?
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsAnyItemHovered">
            <summary>
            Is any item hovered?
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsItemActivated">
            <summary>
            Was the last item just made active (item was previously inactive).
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsItemActive">
            <summary>
            Is the last item active? (e.g. button being held, text field being edited. This will continuously return true while holding mouse button on an item. Items that don't interact will always return false)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsItemClicked">
            <summary>
            Is the last item hovered and mouse clicked on?
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsItemDeactivated">
            <summary>
            Was the last item just made inactive (item was previously active). Useful for Undo/Redo patterns with widgets that requires continuous editing.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsItemDeactivatedAfterEdit">
            <summary>
            Was the last item just made inactive and made a value change when it was active? (e.g. Slider/Drag moved). Useful for Undo/Redo patterns with widgets that requires continuous editing. Note that you may get false positives (some widgets such as Combo()/ListBox()/Selectable() will return true even when clicking an already selected item).
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsItemEdited">
            <summary>
            Did the last item modify its underlying value this frame? or was pressed? This is generally the same as the 'bool' return value of many widgets.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsItemFocused">
            <summary>
            Is the last item focused for keyboard/gamepad navigation?
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsItemHovered">
            <summary>
            Is the last item hovered? (and usable, aka not blocked by a popup, etc.). See ImGuiHoveredFlags for more options.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsItemToggledOpen">
            <summary>
            Was the last item open state toggled? set by TreeNode.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsItemVisible">
            <summary>
            Is the last item visible? (items may be out of sight because of clipping/scrolling)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsPopupOpen">
            <summary>
            Return true if the popup is open at the current BeginPopup() level of the popup stack. With AnyPopupId flag: return true if any popup is open at the current BeginPopup() level of the popup stack. With AnyPopupId + AnyPopupLevel flags: return true if any popup is open.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetMouseClickedCount">
            <summary>
            Return the number of successive mouse-clicks at the time where a click happen (otherwise 0).
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetMouseDragDelta">
            <summary>
            Return the delta from the initial clicking position while the mouse button is pressed or was just released. This is locked and return 0.0f until the mouse moves past a distance threshold at least once (if lock_threshold &lt; -1.0f, uses io.MouseDraggingThreshold)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetMousePosOnOpeningCurrentPopup">
            <summary>
            Retrieve mouse position at the time of opening popup.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsMouseClicked">
            <summary>
            Did mouse button clicked?
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsMouseDoubleClicked">
            <summary>
            Did mouse button double-clicked?
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsMouseDown">
            <summary>
            Is mouse button held?
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsMouseDragging">
            <summary>
            Is mouse dragging? (if lock_threshold &lt; -1.0f, uses io.MouseDraggingThreshold)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsMouseHoveringRect">
            <summary>
            Is mouse hovering given bounding rect (in screen space). Clipped by current clipping settings, but disregarding of other consideration of focus/window ordering/popup-block.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsMouseReleased">
            <summary>
            Did mouse button released?
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.TableGetColumnCount">
            <summary>
            Return number of columns (value passed to BeginTable)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.TableGetColumnFlags">
            <summary>
            Return column flags so you can query their Enabled/Visible/Sorted/Hovered status flags.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.TableGetColumnFlags.Index">
            <summary>
            Pass -1 to use current column.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.TableGetColumnIndex">
            <summary>
            Return current column index.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.TableGetColumnName">
            <summary>
            Return '' if column didn't have a name declared by TableSetupColumn().
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.TableGetColumnName.Index">
            <summary>
            Pass -1 to use current column.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.TableGetRowIndex">
            <summary>
            Return current row index.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.TableGetSortSpecs">
            <summary>
            Get latest sort specs for the table.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetWindowContentRegionMax">
            <summary>
            Content boundaries max for the full window (roughly (0,0)+Size-Scroll) where Size can be override with SetNextWindowContentSize(), in window coordinates
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetWindowContentRegionMin">
            <summary>
            Content boundaries min for the full window (roughly (0,0)-Scroll), in window coordinates
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetWindowPos">
            <summary>
            Get current window position in screen space (useful if you want to do your own drawing via the DrawList API)
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.GetWindowSize">
            <summary>
            Get current window size
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsWindowFocused">
            <summary>
            Is current window focused? Or its root/child, depending on flags.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.IsWindowHovered">
            <summary>
            Is current window hovered (and typically: not blocked by a popup/modal)? See flags for options.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.Selectable">
            <summary>
            A selectable highlights when hovered, and can display another color when selected. Neighbors selectable extend their highlight bounds in order to leave no gap between them. This is so a series of selected Selectable appear contiguous.
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.Separator">
            <summary>
            Separator, generally horizontal. Inside a menu bar or in horizontal layout mode, this becomes a vertical separator.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.SliderWidget`2.Format">
            <summary>
            Adjust format string to decorate the value with a prefix, a suffix, or adapt the editing and display precision e.g. "%.3f" -> 1.234; "%5.2f secs" -> 01.23 secs; "Biscuit: % .0f" -> Biscuit: 1; etc.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.VerticalSliderWidget`2.Format">
            <summary>
            Adjust format string to decorate the value with a prefix, a suffix, or adapt the editing and display precision e.g. "%.3f" -> 1.234; "%5.2f secs" -> 01.23 secs; "Biscuit: % .0f" -> Biscuit: 1; etc.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.TabItem.Closing">
            <summary>
            If set the Tab will have a close button which will push to the channel once clicked.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.TabItem.Visible">
            <summary>
            Returns true if the Tab is displayed. Set to true to display the Tab.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.TabItem.Active">
            <summary>
            Returns true if the Tab is activated/selected. Set to true to activate the Tab.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.TabItem.ContentIsVisible">
            <summary>
            Returns true if content is visible. 
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.TabItem.CloseClicked">
            <summary>
            Returns true if close button is clicked. 
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.CollapsingHeader.Closing">
            <summary>
            If set the Header will have a close button which will push to the channel once clicked.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.CollapsingHeader.Visible">
            <summary>
            Returns true if the Header is displayed. Set to true to display the Header.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.CollapsingHeader.Collapsed">
            <summary>
            Returns true if the Header is collapsed. Set to true to collapse the Header.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.CollapsingHeader.ContentIsVisible">
            <summary>
            Returns true if content is visible. 
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.CollapsingHeader.CloseClicked">
            <summary>
            Returns true if close button is clicked. 
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.TreeNode.Collapsed">
            <summary>
            Returns true if the TreeNode is collapsed. Set to true to collapse the TreeNode.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.TreeNode.ContentIsVisible">
            <summary>
            Returns true if content is visible. 
            </summary>
        </member>
        <member name="T:VL.ImGui.Widgets.ChildWindow">
            <summary>
            Use child windows to begin into a self-contained independent scrolling/clipping regions within a host window. Child windows can embed their own child.
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.ChildWindow.Size">
            <summary>
            For each independent axis of 'size': 
            ==0.0f: use remaining host window size 
            &gt;0.0f: fixed size 
            &lt;0.0f: use remaining window size minus abs(size) 
            Each axis can use a different mode, e.g. (0,400).
            </summary>
        </member>
        <member name="P:VL.ImGui.Widgets.ChildWindow.ContentIsVisible">
            <summary>
            Returns true if content is visible.
            </summary>
        </member>
        <member name="T:VL.ImGui.FontConfig">
            <summary>
            Defines a font configuration.
            </summary>
            <param name="FamilyName">The font family name.</param>
            <param name="FontStyle">The font style.</param>
            <param name="Size">The size of the font in device independent hecto pixel (1 = 100 DIP).</param>
            <param name="Name">An optional name to use for this configuration.</param>
            <param name="GlyphRange">The glyph range.</param>
        </member>
        <member name="M:VL.ImGui.FontConfig.#ctor(VL.Lib.Text.FontList,SixLabors.Fonts.FontStyle,System.Single,System.String,VL.ImGui.GlyphRange)">
            <summary>
            Defines a font configuration.
            </summary>
            <param name="FamilyName">The font family name.</param>
            <param name="FontStyle">The font style.</param>
            <param name="Size">The size of the font in device independent hecto pixel (1 = 100 DIP).</param>
            <param name="Name">An optional name to use for this configuration.</param>
            <param name="GlyphRange">The glyph range.</param>
        </member>
        <member name="P:VL.ImGui.FontConfig.FamilyName">
            <summary>The font family name.</summary>
        </member>
        <member name="P:VL.ImGui.FontConfig.FontStyle">
            <summary>The font style.</summary>
        </member>
        <member name="P:VL.ImGui.FontConfig.Size">
            <summary>The size of the font in device independent hecto pixel (1 = 100 DIP).</summary>
        </member>
        <member name="P:VL.ImGui.FontConfig.Name">
            <summary>An optional name to use for this configuration.</summary>
        </member>
        <member name="P:VL.ImGui.FontConfig.GlyphRange">
            <summary>The glyph range.</summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetAlphaStyle.Alpha">
            <summary>
            Global alpha applies to everything in Dear ImGui.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetAlphaStyle.DisabledAlpha">
            <summary>
            Additional alpha multiplier. Multiply over current value of Alpha.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetButtonStyle.TextAlign">
            <summary>
            Alignment of button text when button is larger than text. Defaults to (0.5, 0.5) (centered).
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetChildWindowStyle.Rounding">
            <summary>
            Radius of child window corners rounding. Set to 0.0 to have rectangular windows.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetChildWindowStyle.BorderSize">
            <summary>
            Thickness of border around child windows. Generally set to 0.0 or 0.01. (Other values are not well tested and more CPU/GPU costly).
            </summary>
        </member>
        <member name="T:VL.ImGui.Styling.SetFrameStyle">
            <summary>
            The style applies to checkboxes, radio buttons, plots, sliders, text inputs
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetFrameStyle.Padding">
            <summary>
            Padding within a framed rectangle (used by most widgets).
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetFrameStyle.Rounding">
            <summary>
            Radius of frame corners rounding. Set to 0.0 to have rectangular frame (used by most widgets).
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetFrameStyle.BorderSize">
            <summary>
            Thickness of border around frames. Generally set to 0.0 or 0.01. (Other values are not well tested and more CPU/GPU costly).
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetGrabStyle.MinSize">
            <summary>
            Minimum width/height of a grab box for slider/scrollbar.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetGrabStyle.Rounding">
            <summary>
            Radius of grabs corners rounding. Set to 0.0f to have rectangular slider grabs.
            </summary>
        </member>
        <member name="T:VL.ImGui.Styling.SetHeaderStyle">
            <summary>
            Header colors are used for CollapsingHeader, TreeNode, Selectable, MenuItem
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetIndentStyle.Indent">
            <summary>
            Horizontal indentation when e.g. entering a tree node. Generally == (FontSize + FramePadding.x*2).
            </summary>
        </member>
        <member name="T:VL.ImGui.Styling.SetPopupStyle">
            <summary>
            This style applies to popups, menus, tooltips windows.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetPopupStyle.Background">
            <summary>
            Background of popups, menus, tooltips windows
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetPopupStyle.ModalDimBackground">
            <summary>
            Darken/colorize entire screen behind a modal window, when one is active
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetPopupStyle.Rounding">
            <summary>
            Radius of popup window corners rounding.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetPopupStyle.BorderSize">
            <summary>
            Thickness of border around popup/tooltip windows. Generally set to 0.0 or 0.01. (Other values are not well tested and more CPU/GPU costly).
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetScrollStyle.ScrollbarSize">
            <summary>
            Width of the vertical scrollbar, Height of the horizontal scrollbar.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetScrollStyle.GrabRounding">
            <summary>
            Radius of grab corners for scrollbar.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetSelectableStyle.TextAlign">
            <summary>
            Alignment of selectable text. Defaults to (0.0, 0.0) (top-left aligned). It's generally important to keep this left-aligned if you want to lay multiple items on a same line.
            </summary>
        </member>
        <member name="T:VL.ImGui.Styling.SetSeparatorStyle">
            <summary>
            Separator, generally horizontal. inside a menu bar or in horizontal layout mode, this becomes a vertical separator.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetSpacingStyle.ItemSpacing">
            <summary>
            Horizontal and vertical spacing between widgets/lines.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetSpacingStyle.InnerSpacing">
            <summary>
            Horizontal and vertical spacing between within elements of a composed widget (e.g. a slider and its label).
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetTableStyle.RowBackground">
            <summary>
            Table row background (even rows)
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetTableStyle.RowBackgroundAlt">
            <summary>
            Table row background (odd rows)
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetTableStyle.BorderStrongColor">
            <summary>
            Table outer and header borders (prefer using Alpha=1.0 here)
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetTableStyle.BorderLightColor">
            <summary>
            Table inner borders (prefer using Alpha=1.0 here)
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetTableStyle.CellPadding">
            <summary>
            Padding within a table cell.
            </summary>
        </member>
        <member name="T:VL.ImGui.Styling.SetTabStyle">
            <summary>
            The style applies to TabItems in a TabBar.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetTabStyle.Rounding">
            <summary>
            Radius of upper corners of a tab. Set to 0.0 to have rectangular tabs.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetWindowStyle.ResizeGripColor">
            <summary>
            Color of the Resize grip in lower-right and lower-left corners of windows.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetWindowStyle.ResizeGripHovered">
            <summary>
            Hovered Color of the Resize grip.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetWindowStyle.ResizeGripActive">
            <summary>
            Active Color of the Resize grip.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetWindowStyle.MinSize">
            <summary>
            Minimum window size.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetWindowStyle.Padding">
            <summary>
            Padding within a window.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetWindowStyle.Rounding">
            <summary>
            Radius of window corners rounding. Set to 0.0 to have rectangular windows. Large values tend to lead to variety of artifacts and are not recommended.
            </summary>
        </member>
        <member name="P:VL.ImGui.Styling.SetWindowStyle.BorderSize">
            <summary>
            Thickness of border around windows. Generally set to 0.0 or 0.01. (Other values are not well tested and more CPU/GPU costly).
            </summary>
        </member>
        <member name="P:VL.ImGui.Windows.WindowCore.Closing">
            <summary>
            If set the window will have a close button which will push to the channel once clicked.
            </summary>
        </member>
        <member name="P:VL.ImGui.Windows.WindowCore.Bounds">
            <summary>
            Bounds of the Window.
            </summary>
        </member>
        <member name="P:VL.ImGui.Windows.WindowCore.Visible">
            <summary>
            Returns true if the Window is open. Set to true to open the window.
            </summary>
            We bend the original lib here, because in ImGui it can't be used to set visibility of the window.
            https://github.com/ocornut/imgui/blob/5bb287494096461f90eb5d18135f7c4809efd2f5/imgui.h#L320
            
        </member>
        <member name="P:VL.ImGui.Windows.WindowCore.Collapsed">
            <summary>
            Returns true if the Window is collapsed. Set to true to collapse the window.
            </summary>
        </member>
        <member name="P:VL.ImGui.Windows.WindowCore.ContentIsVisible">
            <summary>
            Returns true if content is visible.
            </summary>
        </member>
        <member name="P:VL.ImGui.Windows.WindowCore.CloseClicked">
            <summary>
            Returns true if close button is clicked. 
            </summary>
        </member>
    </members>
</doc>
